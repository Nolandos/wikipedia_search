{"version":3,"sources":["i18n/config.ts","assets/colors.ts","components/common/Input/StyledInput.tsx","components/common/Input/Input.tsx","components/views/WikipediaSearchEngine/StyledWikipediaSearchEngine.tsx","components/common/Button/types.ts","components/common/Button/theme.ts","components/common/Button/StyledButton.tsx","components/common/Button/Button.tsx","components/views/WikipediaSearchEngine/WikipediaSearchEngineItem/WikipediaSearchEngineItem.tsx","assets/icons/flags/poland.png","assets/icons/flags/england.png","components/common/LanguageButton/LanguageButton.tsx","store/actions/actionTypes.ts","shared/axios-sw.ts","store/actions/app.ts","components/common/Loader/Loader.tsx","components/views/WikipediaSearchEngine/WikipediaSearchEngine.tsx","components/pages/HomePage/StyledHomePage.tsx","components/pages/HomePage/HomePage.tsx","App.tsx","reportWebVitals.ts","store/reducers/app.ts","store/store.ts","index.tsx"],"names":["resources","en","translation","pl","i18n","use","initReactI18next","init","lng","appColors","StyledInput","styled","input","ErrorText","p","InputField","div","Input","id","name","type","onChangeHandler","onFocusHandler","onKeyDownHandler","onKeyUpHandler","value","placeholder","error","props","onChange","e","target","onKeyDown","onKeyUp","onFocus","StyledWikipediaSearchEngineContainer","StyledSearchInput","StyledActionsWrapper","StyledResultsWrapper","ul","StyledChangeLanguageButtonsWrapper","StyledLanguageButton","button","StyledLoaderWrapper","variants","PRIMARY","SECONDARY","ACTION","app","background","border","borderHover","backgroundHover","borderColorHover","colorHover","color","borderColor","getButtonVariantProp","variant","property","StyledButton","isLoading","disabled","getDisabledStyles","Button","children","onClickHandler","customStyle","onClick","style","defaultProps","WikipediaSearchEngineItem","pageId","title","snippet","className","parse","LanguageButton","lang","flagSrc","changeLanguage","src","alt","APP_START","APP_SUCCESS","APP_FAIL","APP_WIKIPEDIA_DATA","instance","axios","create","baseURL","process","appFail","payload","appOnGetWikipediaData","val","limitResults","dispatch","a","get","params","action","list","format","origin","srsearch","srlimit","res","data","query","search","Loader","WikipediaSearchEngine","useDispatch","t","useTranslation","history","useHistory","wikipediaData","useParams","useSelector","store","loading","useState","searchText","setSearchText","replaceText","setReplaceText","timer","setTimer","disabledButton","trim","handleOnSearchResults","length","push","useEffect","searchPhrase","URLSearchParams","location","PolishFlag","BritishFlag","handleOnChangeSearchText","clearTimeout","setTimeout","handleDebounceSearch","event","key","container","document","getElementById","searchMark","querySelector","innerHTML","classList","remove","searchMarksArray","querySelectorAll","forEach","mark","map","pageid","StyledHomePageContainer","HomePage","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ordersReducer","state","allReducers","combineReducers","appReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d3f9f9b1.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport translationEN from './en/translation.json';\nimport translationPL from './pl/translation.json';\n\nconst resources = {\n    en: {\n        translation: translationEN,\n    },\n    pl: {\n        translation: translationPL,\n    },\n} as const;\n\ni18n.use(initReactI18next).init({\n    lng: 'en',\n    resources,\n});\n\nexport default i18n;\n","export const appColors = {\n    white: '#FFFFFF',\n    transparent: 'transparent',\n    black: '#000000',\n    grubbyRed: '#801515',\n    soulfulBlue: '#787A91',\n    pureMidnight: '#141E61',\n    hotPepperGreen: '#5D8233',\n};\n","import styled from 'styled-components';\nimport {appColors} from '../../../assets/colors';\n\nexport const StyledInput = styled.input`\n    border: 1px solid ${appColors.black};\n    outline: none;\n    padding: 10px 15px;\n    width: calc(100% - 30px);\n`;\n\nexport const ErrorText = styled.p`\n    margin: 5px 0 0 0;\n    padding: 0;\n    color: ${appColors.grubbyRed};\n`;\n\nexport const InputField = styled.div`\n    margin: 15px 0;\n    max-width: 400px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n`;\n","import React from 'react';\nimport {ErrorText, StyledInput, InputField} from './StyledInput';\nimport {InputProps} from './types';\n\nconst Input: React.FC<InputProps> = ({\n    id,\n    name,\n    type,\n    onChangeHandler,\n    onFocusHandler,\n    onKeyDownHandler,\n    onKeyUpHandler,\n    value,\n    placeholder,\n    error,\n    ...props\n}) => (\n    <InputField {...props}>\n        <StyledInput\n            id={id}\n            name={name}\n            type={type}\n            onChange={(e) => onChangeHandler && onChangeHandler(e.target.value)}\n            onKeyDown={onKeyDownHandler}\n            onKeyUp={onKeyUpHandler}\n            onFocus={onFocusHandler}\n            placeholder={placeholder}\n            value={value}\n        />\n        {error && <ErrorText>{error}</ErrorText>}\n    </InputField>\n);\n\nexport default Input;\n","import styled from 'styled-components';\nimport Input from '../../common/Input/Input';\nimport {appColors} from '../../../assets/colors';\n\nexport const StyledWikipediaSearchEngineContainer = styled.div`\n    margin: 15px 0;\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n\n    align-items: center;\n    min-height: 400px;\n\n    .searchmatch {\n        background-color: yellow;\n    }\n`;\n\nexport const StyledSearchInput = styled(Input)`\n    margin: 15px;\n    height: 50px;\n`;\n\nexport const StyledActionsWrapper = styled.div``;\n\nexport const StyledResultsWrapper = styled.ul`\n    padding: 25px;\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const StyledChangeLanguageButtonsWrapper = styled.div``;\n\nexport const StyledLanguageButton = styled.button`\n    width: 40px;\n    height: 40px;\n    margin: 15px;\n    border-radius: 50%;\n    cursor: pointer;\n    border: none;\n    background-color: ${appColors.transparent};\n\n    > img {\n        width: 100%;\n        height: auto;\n    }\n`;\n\nexport const StyledLoaderWrapper = styled.div`\n    margin-top: 25px;\n    position: relative;\n`;\n","export const variants = {\n    PRIMARY: 'primary',\n    SECONDARY: 'secondary',\n    ACTION: 'action',\n} as const;\n\nexport type Variants = typeof variants[keyof typeof variants];\n\nexport type ButtonProps = {\n    variant?: Variants;\n    isLoading?: boolean;\n    disabled?: boolean;\n    onClickHandler?: () => void;\n    customStyle?: object;\n};\n\nexport type ButtonThemeVariant = {\n    background: string;\n    backgroundActive: string;\n    backgroundHover: string;\n    border: string | number;\n    borderColorHover: string;\n    boxShadow: string;\n    boxShadowActive: string;\n    color: string;\n    colorHover: string;\n    borderHover: string | number;\n};\n","import {variants} from './types';\nimport {appColors} from '../../../assets/colors';\n\nconst {PRIMARY, SECONDARY, ACTION} = variants;\n\nexport const app: {[index: string]: any} = {\n    [PRIMARY]: {\n        background: appColors.pureMidnight,\n        border: `1px solid ${appColors.pureMidnight}`,\n        borderHover: `1px solid ${appColors.pureMidnight}`,\n        backgroundHover: appColors.white,\n        borderColorHover: appColors.pureMidnight,\n        colorHover: appColors.pureMidnight,\n        color: appColors.white,\n    },\n    [SECONDARY]: {\n        background: appColors.white,\n        border: `1px solid ${appColors.pureMidnight}`,\n        borderColor: appColors.pureMidnight,\n        backgroundHover: appColors.pureMidnight,\n        borderColorHover: appColors.transparent,\n        colorHover: appColors.white,\n        color: appColors.pureMidnight,\n    },\n    [ACTION]: {\n        background: appColors.hotPepperGreen,\n        border: `1px solid ${appColors.hotPepperGreen}`,\n        borderHover: `1px solid ${appColors.hotPepperGreen}`,\n        backgroundHover: appColors.white,\n        borderColorHover: appColors.hotPepperGreen,\n        colorHover: appColors.hotPepperGreen,\n        color: appColors.white,\n    },\n};\n","import styled from 'styled-components';\nimport {ButtonProps, ButtonThemeVariant} from './types';\nimport {app} from './theme';\nimport {appColors} from '../../../assets/colors';\n\nconst getDisabledStyles = (disabled: boolean | undefined) => {\n    if (disabled) {\n        return `\n      &:disabled,\n      &.button--disabled {\n        border: none;\n        background-color: ${appColors.soulfulBlue};\n        color: ${appColors.white};\n        cursor: not-allowed;\n      }\n    `;\n    }\n    return '';\n};\n\nconst getButtonVariantProp = (\n    variant: string | undefined,\n    property: keyof ButtonThemeVariant,\n) => variant && app[variant][property];\n\nconst StyledButton = styled.button<ButtonProps>`\n    align-items: center;\n    background-color: ${({variant}) => getButtonVariantProp(variant, 'background')};\n    border: ${({variant}) => getButtonVariantProp(variant, 'border')};\n    color: ${({variant}) => getButtonVariantProp(variant, 'color')};\n    cursor: pointer;\n    display: inline-flex;\n    font-family: inherit;\n    font-size: 16px;\n    font-weight: 600;\n    justify-content: space-between;\n    height: 50px;\n    margin: 15px;\n\n    outline: 0;\n    transition: background-color 0.2s;\n    padding-bottom: 3px;\n    opacity: ${({isLoading}) => (isLoading ? 0.5 : 1)};\n    border-radius: 4px;\n\n    &:hover:not(:disabled):not(.button--disabled):not(:active) {\n        background-color: ${({variant}) => getButtonVariantProp(variant, 'backgroundHover')};\n        border-color: ${({variant}) => getButtonVariantProp(variant, 'borderColorHover')};\n        color: ${({variant}) => getButtonVariantProp(variant, 'colorHover')};\n        border: ${({variant}) => getButtonVariantProp(variant, 'borderHover')};\n    }\n\n    ${({disabled}) => disabled && getDisabledStyles(disabled)}\n`;\n\nexport default StyledButton;\n","import React from 'react';\nimport {ButtonProps, variants} from './types';\nimport StyledButton from './StyledButton';\n\nconst Button: React.FC<ButtonProps> = ({\n    variant,\n    children,\n    isLoading,\n    disabled,\n    onClickHandler,\n    customStyle,\n    ...props\n}) => (\n    <StyledButton\n        variant={variant}\n        disabled={disabled}\n        isLoading={isLoading}\n        onClick={onClickHandler}\n        style={customStyle}\n        {...props}\n    >\n        {children}\n    </StyledButton>\n);\n\nButton.defaultProps = {\n    variant: variants.PRIMARY,\n    isLoading: false,\n    disabled: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport './WikipediaSearchEngineItem.scss';\nimport parse from 'html-react-parser';\n\ninterface WikipediaSearchEngineItemProps {\n    pageId: number;\n    title: string;\n    snippet: string;\n}\nconst WikipediaSearchEngineItem: React.FC<WikipediaSearchEngineItemProps> = ({\n    pageId,\n    title,\n    snippet,\n}) => (\n    <li className=\"wikipedia-search-engine-item\" key={pageId}>\n        <h2 className=\"wikipedia-search-engine-item__title\">{title}</h2>\n        <p className=\"wikipedia-search-engine-item__snippet\">\n            {parse(snippet)}\n        </p>\n        {/* OR dangerouslySetInnerHTML={{__html: snippet}} */}\n    </li>\n);\n\nexport default WikipediaSearchEngineItem;\n","export default __webpack_public_path__ + \"static/media/poland.6b8b26e8.png\";","export default __webpack_public_path__ + \"static/media/england.c18569cd.png\";","import React from 'react';\nimport i18n from '../../../i18n/config';\nimport {StyledLanguageButton} from '../../views/WikipediaSearchEngine/StyledWikipediaSearchEngine';\nimport {LanguageButtonProps} from './types';\n\nconst LanguageButton: React.FC<LanguageButtonProps> = ({lang, flagSrc}) => (\n    <StyledLanguageButton onClick={() => i18n.changeLanguage(lang)}>\n        <img src={flagSrc} alt={lang} />\n    </StyledLanguageButton>\n);\n\nexport default LanguageButton;\n","export const APP_START = 'APP_START';\nexport const APP_SUCCESS = 'APP_SUCCESS';\nexport const APP_FAIL = 'APP_FAIL';\nexport const APP_WIKIPEDIA_DATA = 'APP_WIKIPEDIA_DATA';\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_WIKIPEDIA_BACKEND_URL,\n});\n\nexport default instance;\n","import {\n    APP_START,\n    APP_SUCCESS,\n    APP_FAIL,\n    APP_WIKIPEDIA_DATA,\n} from './actionTypes';\nimport axios from '../../shared/axios-sw';\n\nexport const appStart = () => ({type: APP_START});\nexport const appSuccess = () => ({type: APP_SUCCESS});\nexport const appFail = (payload: any) => ({payload, type: APP_FAIL});\n\nexport const appSetWikipediaData = (payload: Array<any>) => ({\n    payload,\n    type: APP_WIKIPEDIA_DATA,\n});\n\n// FETCH EXAMPLE\nconst appFetchOnGetWikipediaData = (val: string, limitResults: number) => {\n    const requestOptions = {\n        method: 'GET',\n    };\n\n    return fetch(\n        `${process.env.REACT_APP_WIKIPEDIA_BACKEND_URL}?action=query&list=search&format=json&origin=*&srsearch=\"${val}\"&srlimit=${limitResults}`,\n        requestOptions,\n    )\n        .then((response) => response.json())\n        .then((data) => data);\n};\n\nexport const appOnGetWikipediaData = (val: string, limitResults: number) => async (dispatch: (arg0: any) => void) => {\n    dispatch(appStart());\n    try {\n        /* OR fetch const res = appFetchOnGetWikipediaData(val, limitResults) */\n        const res = await axios.get('', {\n            params: {\n                action: 'query',\n                list: 'search',\n                format: 'json',\n                origin: '*',\n                srsearch: val,\n                srlimit: limitResults,\n            },\n        });\n\n        dispatch(appSetWikipediaData(res.data.query.search));\n        dispatch(appSuccess());\n    } catch (e) {\n        dispatch(appFail(e));\n    }\n};\n","import React from 'react';\nimport './Loader.scss';\n\nconst Loader: React.FC = () => (\n    <div className=\"ball-loader\">\n        <div className=\"ball-loader-ball ball1\" />\n        <div className=\"ball-loader-ball ball2\" />\n        <div className=\"ball-loader-ball ball3\" />\n    </div>\n);\n\nexport default Loader;\n","import React, {useEffect, useState} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n    StyledWikipediaSearchEngineContainer,\n    StyledSearchInput,\n    StyledActionsWrapper,\n    StyledResultsWrapper,\n    StyledChangeLanguageButtonsWrapper,\n    StyledLoaderWrapper,\n} from './StyledWikipediaSearchEngine';\nimport Button from '../../common/Button/Button';\nimport WikipediaSearchEngineItem from './WikipediaSearchEngineItem/WikipediaSearchEngineItem';\nimport PolishFlag from '../../../assets/icons/flags/poland.png';\nimport BritishFlag from '../../../assets/icons/flags/england.png';\nimport LanguageButton from '../../common/LanguageButton/LanguageButton';\nimport {appOnGetWikipediaData} from '../../../store/actions/app';\nimport {appInitialState} from '../../../store/reducers/type';\nimport Loader from '../../common/Loader/Loader';\n\nconst WikipediaSearchEngine: React.FC = () => {\n    const dispatch = useDispatch();\n    const {t} = useTranslation();\n    const history = useHistory();\n    const params = useParams<{search: string}>();\n\n    const wikipediaData = useSelector(\n        (store: {app: appInitialState}) => store.app.wikipediaData,\n    );\n\n    const loading = useSelector(\n        (store: {app: appInitialState}) => store.app.loading,\n    );\n\n    const [searchText, setSearchText] = useState<string>('');\n    const [replaceText, setReplaceText] = useState<string>('');\n    const [timer, setTimer] = useState<any>(null);\n\n    const limitResults = 10;\n    const disabledButton = loading || replaceText.trim() === '' || searchText.trim() === '';\n\n    const handleOnChangeSearchText = (val: string) => setSearchText(val);\n    const handleOnChangeReplaceText = (val: string) => setReplaceText(val);\n    const handleOnReplacePhrase = () => {\n        const container = document.getElementById(\n            'wikipedia-results-container',\n        );\n        const searchMark = container?.querySelector('.searchmatch');\n        if (searchMark) {\n            searchMark.innerHTML = replaceText;\n            searchMark.classList.remove('searchmatch');\n        }\n    };\n    const handleOnReplaceAllPhrase = () => {\n        const container = document.getElementById(\n            'wikipedia-results-container',\n        );\n        const searchMarksArray = container?.querySelectorAll('.searchmatch');\n\n        searchMarksArray?.forEach((mark) => {\n            const searchMark = mark;\n            searchMark.innerHTML = replaceText;\n            searchMark.classList.remove('searchmatch');\n        });\n    };\n    const handleOnSearchResults = async (val: string) => {\n        if (val.trim().length > 0) {\n            history.push(`?search=${val}`);\n            dispatch(appOnGetWikipediaData(val, limitResults));\n        }\n    };\n    const handleDebounceSearch = (val: string) => {\n        setTimer(setTimeout(() => handleOnSearchResults(val), 500));\n    };\n    const handleClearDebounceSearch = () => {\n        setTimer(null);\n        clearTimeout(timer);\n    };\n\n    useEffect(() => {\n        const searchParams = new URLSearchParams(history.location.search);\n        const searchPhrase: string | null = searchParams.get('search');\n        if (searchPhrase) {\n            setSearchText(searchPhrase);\n            dispatch(appOnGetWikipediaData(searchPhrase, limitResults));\n        }\n    }, []);\n\n    return (\n        <StyledWikipediaSearchEngineContainer>\n            <StyledChangeLanguageButtonsWrapper>\n                <LanguageButton flagSrc={PolishFlag} lang=\"pl\" />\n                <LanguageButton flagSrc={BritishFlag} lang=\"en\" />\n            </StyledChangeLanguageButtonsWrapper>\n            <StyledActionsWrapper>\n                <StyledSearchInput\n                    value={searchText}\n                    onChangeHandler={(val) => {\n                        handleOnChangeSearchText(val);\n                        handleClearDebounceSearch();\n                        handleDebounceSearch(val);\n                    }}\n                    placeholder={t(\n                        'WikipediaSearchEngine.SearchInputPlaceholder',\n                    )}\n                    onKeyDownHandler={(event: any) => {\n                        const {key} = event;\n                        if (key === 'Enter') {\n                            handleOnSearchResults(searchText);\n                        }\n                    }}\n                />\n                <StyledSearchInput\n                    onChangeHandler={handleOnChangeReplaceText}\n                    placeholder={t(\n                        'WikipediaSearchEngine.ReplaceWithInputPlaceholder',\n                    )}\n                />\n                <Button\n                    onClickHandler={() => {\n                        handleOnSearchResults(searchText);\n                    }}\n                >\n                    {t('WikipediaSearchEngine.SearchButton')}\n                </Button>\n                <Button\n                    disabled={disabledButton}\n                    variant=\"secondary\"\n                    onClickHandler={handleOnReplacePhrase}\n                >\n                    {t('WikipediaSearchEngine.ReplaceButton')}\n                </Button>\n                <Button\n                    disabled={disabledButton}\n                    variant=\"action\"\n                    onClickHandler={handleOnReplaceAllPhrase}\n                >\n                    {t('WikipediaSearchEngine.ReplaceAllButton')}\n                </Button>\n            </StyledActionsWrapper>\n            {loading ? (\n                <StyledLoaderWrapper>\n                    <Loader />\n                </StyledLoaderWrapper>\n            ) : (\n                <StyledResultsWrapper id=\"wikipedia-results-container\">\n                    {wikipediaData.map(({pageid, title, snippet}) => (\n                        <WikipediaSearchEngineItem\n                            key={pageid}\n                            pageId={pageid}\n                            title={title}\n                            snippet={snippet}\n                        />\n                    ))}\n                </StyledResultsWrapper>\n            )}\n            {wikipediaData.length === 0 && !loading && (\n                <p>{t('WikipediaSearchEngine.NoResults')}</p>\n            )}\n        </StyledWikipediaSearchEngineContainer>\n    );\n};\n\nexport default WikipediaSearchEngine;\n","import styled from 'styled-components';\n\nexport const StyledHomePageContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n","import React from 'react';\nimport WikipediaSearchEngine from '../../views/WikipediaSearchEngine/WikipediaSearchEngine';\nimport {StyledHomePageContainer} from './StyledHomePage';\n\nconst HomePage: React.FC = () => (\n    <StyledHomePageContainer>\n        <WikipediaSearchEngine />\n    </StyledHomePageContainer>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport './i18n/config';\nimport './App.css';\nimport {Switch, Route} from 'react-router-dom';\nimport HomePage from './components/pages/HomePage/HomePage';\n\nfunction App() {\n    return (\n        <Switch>\n            <Route path=\"/\" component={HomePage} />\n        </Switch>\n    );\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import {\n    APP_START,\n    APP_SUCCESS,\n    APP_FAIL,\n    APP_WIKIPEDIA_DATA,\n} from '../actions/actionTypes';\n\nconst initialState = {\n    error: null,\n    loading: false,\n    wikipediaData: [],\n};\n\nconst ordersReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n    case APP_START:\n        return {\n            ...state,\n            loading: true,\n        };\n    case APP_SUCCESS:\n        return {\n            ...state,\n            loading: false,\n            error: null,\n        };\n    case APP_FAIL:\n        return {\n            ...state,\n            error: action.payload,\n            loading: false,\n        };\n    case APP_WIKIPEDIA_DATA:\n        return {\n            ...state,\n            wikipediaData: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n\nexport default ordersReducer;\n","import {createStore, compose, applyMiddleware, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\n\n// import reducers\nimport appReducer from './reducers/app';\n\n// combine reducers\nconst allReducers = combineReducers({app: appReducer});\n\n// CREATE STRORE\nconst composeEnhancer = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(allReducers, composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}